using System;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Data;
using OneTSQ.Model;
using OneTSQ.Bussiness.Template;
using OneTSQ.Database.Service;
using OneTSQ.Core.Model;

namespace OneTSQ.Bussiness.Sql
{
    public class DeCuongProcessBll : DeCuongTemplate
    {
        public override string ServiceId
        {
            get
            {
                return "SqlDeCuongProcessBll";
            }
        }
        public override DeCuongCls[] Reading(ActionSqlParamCls ActionSqlParam, DeCuongFilterCls ODeCuongFilter)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                if (ODeCuongFilter == null)
                {
                    ODeCuongFilter = new DeCuongFilterCls();
                }
                Collection<DbParam>
                    ColDbParams = new Collection<DbParam>();
                string Query = " select * from NCKH_DECUONG where 1=1 ";
                if (!string.IsNullOrEmpty(ODeCuongFilter.DANGKYDETAI_ID))
                {
                    ColDbParams.Add(new DbParam("DANGKYDETAI_ID", ODeCuongFilter.DANGKYDETAI_ID));
                    Query += " and DANGKYDETAI_ID = " + ActionSqlParam.SpecialChar + "DANGKYDETAI_ID ";
                }
                if (!string.IsNullOrEmpty(ODeCuongFilter.NGUOIGUI_ID))
                {
                    ColDbParams.Add(new DbParam("NGUOIGUI_ID", ODeCuongFilter.NGUOIGUI_ID));
                    Query += " and NGUOIGUI_ID = " + ActionSqlParam.SpecialChar + "NGUOIGUI_ID ";
                }
                if (!string.IsNullOrEmpty(ODeCuongFilter.LICHXETDUYET_ID))
                {
                    ColDbParams.Add(new DbParam("LICHXETDUYET_ID", ODeCuongFilter.LICHXETDUYET_ID));
                    Query += " and LICHXETDUYET_ID = " + ActionSqlParam.SpecialChar + "LICHXETDUYET_ID ";
                }
                if (ODeCuongFilter.KETLUAN != null)
                {
                    ColDbParams.Add(new DbParam("KETLUAN", ODeCuongFilter.KETLUAN));
                    Query += " and KETLUAN = " + ActionSqlParam.SpecialChar + "KETLUAN ";
                }
                if (ODeCuongFilter.TrangThai != null)
                {
                    ColDbParams.Add(new DbParam("TRANGTHAI", ODeCuongFilter.TrangThai));
                    Query += " and TRANGTHAI = " + ActionSqlParam.SpecialChar + "TRANGTHAI ";
                }
                Query += " order by NGAYDANGKY";

                DataSet dsResult =
                        DBService.GetDataSet(ActionSqlParam.Trans, Query, ColDbParams.ToArray());
                DeCuongCls[] DeCuongs = DeCuongParser.ParseFromDataTable(dsResult.Tables[0]);

                dsResult.Clear();
                dsResult.Dispose();
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return DeCuongs;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override DeCuongCls[] PageReading(ActionSqlParamCls ActionSqlParam, DeCuongFilterCls ODeCuongFilter, ref long recordTotal)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                if (ODeCuongFilter == null)
                {
                    ODeCuongFilter = new DeCuongFilterCls();
                }
                Collection<DbParam>
                    ColDbParams = new Collection<DbParam>();
                string Query = "";
                string recordTotalQuery = "";

                Query = " select * from NCKH_DECUONG Where 1=1 ";
                recordTotalQuery = " select count(1) from NCKH_DECUONG Where 1=1 ";
                if (!string.IsNullOrEmpty(ODeCuongFilter.DANGKYDETAI_ID))
                {
                    ColDbParams.Add(new DbParam("DANGKYDETAI_ID", ODeCuongFilter.DANGKYDETAI_ID));
                    Query += " and DANGKYDETAI_ID = " + ActionSqlParam.SpecialChar + "DANGKYDETAI_ID ";
                    recordTotalQuery += " and DANGKYDETAI_ID = " + ActionSqlParam.SpecialChar + "DANGKYDETAI_ID ";
                }
                if (!string.IsNullOrEmpty(ODeCuongFilter.NGUOIGUI_ID))
                {
                    ColDbParams.Add(new DbParam("NGUOIGUI_ID", ODeCuongFilter.NGUOIGUI_ID));
                    Query += " and NGUOIGUI_ID = " + ActionSqlParam.SpecialChar + "NGUOIGUI_ID ";
                    recordTotalQuery += " and NGUOIGUI_ID = " + ActionSqlParam.SpecialChar + "NGUOIGUI_ID ";
                }
                if (!string.IsNullOrEmpty(ODeCuongFilter.LICHXETDUYET_ID))
                {
                    ColDbParams.Add(new DbParam("LICHXETDUYET_ID", ODeCuongFilter.LICHXETDUYET_ID));
                    Query += " and LICHXETDUYET_ID = " + ActionSqlParam.SpecialChar + "LICHXETDUYET_ID ";
                    recordTotalQuery += " and LICHXETDUYET_ID = " + ActionSqlParam.SpecialChar + "LICHXETDUYET_ID ";
                }
                if (!string.IsNullOrEmpty(ODeCuongFilter.Keyword))
                {
                    Query += " and (UPPER(MA) like UPPER('%" + ODeCuongFilter.Keyword + "%') OR UPPER(TENDECUONG) like UPPER(N'%" + ODeCuongFilter.Keyword + "%'))";
                    recordTotalQuery += " and (UPPER(MASOPHIEU) like UPPER('%" + ODeCuongFilter.Keyword + "%') OR UPPER(TENDECUONG) like UPPER(N'%" + ODeCuongFilter.Keyword + "%'))";
                }
                if (ODeCuongFilter.KETLUAN != null)
                {
                    ColDbParams.Add(new DbParam("KETLUAN", ODeCuongFilter.KETLUAN));
                    Query += " and KETLUAN = " + ActionSqlParam.SpecialChar + "KETLUAN ";
                }
                if (ODeCuongFilter.TrangThai != null)
                {
                    ColDbParams.Add(new DbParam("TRANGTHAI", ODeCuongFilter.TrangThai));
                    Query += " and TRANGTHAI = " + ActionSqlParam.SpecialChar + "TRANGTHAI ";
                    recordTotalQuery += " and TRANGTHAI = " + ActionSqlParam.SpecialChar + "TRANGTHAI ";
                }
                Query += " ORDER BY THOIGIANGUI " +
                " OFFSET " + (ODeCuongFilter.PageIndex * ODeCuongFilter.PageSize) + " ROWS " +
                " FETCH NEXT " + ODeCuongFilter.PageSize + " ROWS ONLY ";

                DataSet dsResult =
                        DBService.GetDataSet(ActionSqlParam.Trans, Query, ColDbParams.ToArray());
                DeCuongCls[] DeCuongs = DeCuongParser.ParseFromDataTable(dsResult.Tables[0]);
                recordTotal = long.Parse(DBService.GetDataSet(ActionSqlParam.Trans, recordTotalQuery, ColDbParams.ToArray()).Tables[0].Rows[0][0].ToString());

                dsResult.Clear();
                dsResult.Dispose();
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return DeCuongs;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override void Add(ActionSqlParamCls ActionSqlParam, DeCuongCls ODeCuong)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                if (string.IsNullOrEmpty(ODeCuong.ID))
                {
                    ODeCuong.ID = System.Guid.NewGuid().ToString();
                }
                DBService.Insert(ActionSqlParam.Trans, "NCKH_DECUONG",
                    new DbParam[]{
                    new DbParam("ID",ODeCuong.ID),
                    new DbParam("DANGKYDETAI_ID",ODeCuong.DANGKYDETAI_ID),
                    new DbParam("MA",ODeCuong.MA),
                    new DbParam("TENDECUONG",ODeCuong.TENDECUONG),
                    new DbParam("NGUOIGUI_ID",ODeCuong.NGUOIGUI_ID),
                    new DbParam("THOIGIANGUI",ODeCuong.THOIGIANGUI),
                    new DbParam("KETLUAN",ODeCuong.KETLUAN),
                    new DbParam("LICHXETDUYET_ID",ODeCuong.LICHXETDUYET_ID),
                    new DbParam("TRANGTHAI",ODeCuong.TRANGTHAI),
                    new DbParam("YKIENCHUNG",ODeCuong.YKIENCHUNG),
                    new DbParam("THOIGIANBATDAU",ODeCuong.THOIGIANBATDAU),
                    new DbParam("THOIGIANKETTHUC",ODeCuong.THOIGIANKETTHUC),         
                });
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override void Save(ActionSqlParamCls ActionSqlParam, string ID, DeCuongCls ODeCuong)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                DBService.Update(ActionSqlParam.Trans, "NCKH_DECUONG", "ID", ID,
                    new DbParam[]{
                    new DbParam("DANGKYDETAI_ID",ODeCuong.DANGKYDETAI_ID),
                    new DbParam("MA",ODeCuong.MA),
                    new DbParam("TENDECUONG",ODeCuong.TENDECUONG),
                    new DbParam("NGUOIGUI_ID",ODeCuong.NGUOIGUI_ID),
                    new DbParam("THOIGIANGUI",ODeCuong.THOIGIANGUI),
                    new DbParam("KETLUAN",ODeCuong.KETLUAN),
                    new DbParam("LICHXETDUYET_ID",ODeCuong.LICHXETDUYET_ID),
                    new DbParam("TRANGTHAI",ODeCuong.TRANGTHAI),
                    new DbParam("YKIENCHUNG",ODeCuong.YKIENCHUNG),
                    new DbParam("THOIGIANBATDAU",ODeCuong.THOIGIANBATDAU),
                    new DbParam("THOIGIANKETTHUC",ODeCuong.THOIGIANKETTHUC),
                    });
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override void Delete(ActionSqlParamCls ActionSqlParam, string ID)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;
            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                string DelQuery = " Delete from NCKH_DECUONG where ID=" + ActionSqlParam.SpecialChar + "ID";
                DBService.ExecuteNonQuery(ActionSqlParam.Trans, DelQuery,
                    new DbParam[]
                    {
                    new DbParam("ID", ID)
                    });
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override DeCuongCls CreateModel(ActionSqlParamCls ActionSqlParam, string ID)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                DataSet dsResult =
                        DBService.GetDataSet(ActionSqlParam.Trans, "select * from NCKH_DECUONG where (ID =" + ActionSqlParam.SpecialChar + "ID or MA =" + ActionSqlParam.SpecialChar + "ID)", new DbParam[]{
                    new DbParam("ID",ID)
                    });
                DeCuongCls ODeCuong = null;
                if (dsResult.Tables[0].Rows.Count > 0)
                {
                    ODeCuong = DeCuongParser.ParseFromDataRow(dsResult.Tables[0].Rows[0]);
                }
                dsResult.Clear();
                dsResult.Dispose();

                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return ODeCuong;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override string Duplicate(ActionSqlParamCls ActionSqlParam, string ID)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            string NewID = System.Guid.NewGuid().ToString();
            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                DeCuongCls ODeCuong = CreateModel(ActionSqlParam, ID);
                ODeCuong.ID = NewID;
                Add(ActionSqlParam, ODeCuong);

                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return NewID;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override long Count(ActionSqlParamCls ActionSqlParam, DeCuongFilterCls ODeCuongFilter)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                if (ODeCuongFilter == null)
                {
                    ODeCuongFilter = new DeCuongFilterCls();
                }
                Collection<DbParam>
                    ColDbParams = new Collection<DbParam>();
                string Query = " select count(1) from NCKH_DECUONG";
                if (!string.IsNullOrEmpty(ODeCuongFilter.DANGKYDETAI_ID))
                {
                    ColDbParams.Add(new DbParam("DANGKYDETAI_ID", ODeCuongFilter.DANGKYDETAI_ID));
                    Query += " and DANGKYDETAI_ID = " + ActionSqlParam.SpecialChar + "DANGKYDETAI_ID ";
                }
                if (!string.IsNullOrEmpty(ODeCuongFilter.NGUOIGUI_ID))
                {
                    ColDbParams.Add(new DbParam("NGUOIGUI_ID", ODeCuongFilter.NGUOIGUI_ID));
                    Query += " and NGUOIGUI_ID = " + ActionSqlParam.SpecialChar + "NGUOIGUI_ID";
                }
                if (!string.IsNullOrEmpty(ODeCuongFilter.LICHXETDUYET_ID))
                {
                    ColDbParams.Add(new DbParam("LICHXETDUYET_ID", ODeCuongFilter.LICHXETDUYET_ID));
                    Query += " and LICHXETDUYET_ID = " + ActionSqlParam.SpecialChar + "LICHXETDUYET_ID";
                }
                if (ODeCuongFilter.KETLUAN != null)
                {
                    ColDbParams.Add(new DbParam("KETLUAN", ODeCuongFilter.KETLUAN));
                    Query += " and KETLUAN = " + ActionSqlParam.SpecialChar + "KETLUAN ";
                }
                if (ODeCuongFilter.TrangThai != null)
                {
                    ColDbParams.Add(new DbParam("TRANGTHAI", ODeCuongFilter.TrangThai));
                    Query += " and TRANGTHAI = " + ActionSqlParam.SpecialChar + "TRANGTHAI ";
                }
                if (ODeCuongFilter.TuNgay != null)
                {
                    ColDbParams.Add(new DbParam("TUNGAY", ODeCuongFilter.TuNgay));
                    Query += " and THOIGIANGUI >= " + ActionSqlParam.SpecialChar + "TUNGAY ";
                }
                if (ODeCuongFilter.TuNgay != null)
                {
                    ColDbParams.Add(new DbParam("DENNGAY", ODeCuongFilter.TuNgay));
                    Query += " and THOIGIANGUI < " + ActionSqlParam.SpecialChar + "DENNGAY ";
                }              
                long result = long.Parse(DBService.GetDataSet(ActionSqlParam.Trans, Query, ColDbParams.ToArray()).Tables[0].Rows[0][0].ToString());
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return result;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
    }
}
