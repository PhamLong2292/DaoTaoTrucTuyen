//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.36366
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.36366.
// 
#pragma warning disable 1591

namespace Office.Task.Services.SMS247 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36366")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="smsSoap", Namespace="http://tempuri.org/")]
    public partial class sms : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDirectSmsBrandNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback VNetSendDirectSmsBrandNameWithParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public sms() {
            this.Url = global::Office.Task.Services.Properties.Settings.Default.Office_Task_Services_SMS247_sms;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckServiceCompletedEventHandler CheckServiceCompleted;
        
        /// <remarks/>
        public event SendSmsCompletedEventHandler SendSmsCompleted;
        
        /// <remarks/>
        public event SendDirectSmsBrandNameCompletedEventHandler SendDirectSmsBrandNameCompleted;
        
        /// <remarks/>
        public event VNetSendDirectSmsBrandNameWithParamCompletedEventHandler VNetSendDirectSmsBrandNameWithParamCompleted;
        
        /// <remarks/>
        public event CheckStatusCompletedEventHandler CheckStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckService() {
            object[] results = this.Invoke("CheckService", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckServiceAsync() {
            this.CheckServiceAsync(null);
        }
        
        /// <remarks/>
        public void CheckServiceAsync(object userState) {
            if ((this.CheckServiceOperationCompleted == null)) {
                this.CheckServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckServiceOperationCompleted);
            }
            this.InvokeAsync("CheckService", new object[0], this.CheckServiceOperationCompleted, userState);
        }
        
        private void OnCheckServiceOperationCompleted(object arg) {
            if ((this.CheckServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckServiceCompleted(this, new CheckServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSms(string AccountCode, string Password, string MobileNumber, string SMSContent, string SmsId, string BrandName) {
            object[] results = this.Invoke("SendSms", new object[] {
                        AccountCode,
                        Password,
                        MobileNumber,
                        SMSContent,
                        SmsId,
                        BrandName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsAsync(string AccountCode, string Password, string MobileNumber, string SMSContent, string SmsId, string BrandName) {
            this.SendSmsAsync(AccountCode, Password, MobileNumber, SMSContent, SmsId, BrandName, null);
        }
        
        /// <remarks/>
        public void SendSmsAsync(string AccountCode, string Password, string MobileNumber, string SMSContent, string SmsId, string BrandName, object userState) {
            if ((this.SendSmsOperationCompleted == null)) {
                this.SendSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsOperationCompleted);
            }
            this.InvokeAsync("SendSms", new object[] {
                        AccountCode,
                        Password,
                        MobileNumber,
                        SMSContent,
                        SmsId,
                        BrandName}, this.SendSmsOperationCompleted, userState);
        }
        
        private void OnSendSmsOperationCompleted(object arg) {
            if ((this.SendSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsCompleted(this, new SendSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendDirectSmsBrandName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendDirectSmsBrandName(string AccountCode, string Password, string MobileNumber, string SMSContent, string SmsId, string BrandName) {
            object[] results = this.Invoke("SendDirectSmsBrandName", new object[] {
                        AccountCode,
                        Password,
                        MobileNumber,
                        SMSContent,
                        SmsId,
                        BrandName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendDirectSmsBrandNameAsync(string AccountCode, string Password, string MobileNumber, string SMSContent, string SmsId, string BrandName) {
            this.SendDirectSmsBrandNameAsync(AccountCode, Password, MobileNumber, SMSContent, SmsId, BrandName, null);
        }
        
        /// <remarks/>
        public void SendDirectSmsBrandNameAsync(string AccountCode, string Password, string MobileNumber, string SMSContent, string SmsId, string BrandName, object userState) {
            if ((this.SendDirectSmsBrandNameOperationCompleted == null)) {
                this.SendDirectSmsBrandNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDirectSmsBrandNameOperationCompleted);
            }
            this.InvokeAsync("SendDirectSmsBrandName", new object[] {
                        AccountCode,
                        Password,
                        MobileNumber,
                        SMSContent,
                        SmsId,
                        BrandName}, this.SendDirectSmsBrandNameOperationCompleted, userState);
        }
        
        private void OnSendDirectSmsBrandNameOperationCompleted(object arg) {
            if ((this.SendDirectSmsBrandNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDirectSmsBrandNameCompleted(this, new SendDirectSmsBrandNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VNetSendDirectSmsBrandNameWithParam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VNetSendDirectSmsBrandNameWithParam(string AccountCode, string Password, string MobileNumber, string SMSContent, string SmsId, string BrandName, string Param) {
            object[] results = this.Invoke("VNetSendDirectSmsBrandNameWithParam", new object[] {
                        AccountCode,
                        Password,
                        MobileNumber,
                        SMSContent,
                        SmsId,
                        BrandName,
                        Param});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VNetSendDirectSmsBrandNameWithParamAsync(string AccountCode, string Password, string MobileNumber, string SMSContent, string SmsId, string BrandName, string Param) {
            this.VNetSendDirectSmsBrandNameWithParamAsync(AccountCode, Password, MobileNumber, SMSContent, SmsId, BrandName, Param, null);
        }
        
        /// <remarks/>
        public void VNetSendDirectSmsBrandNameWithParamAsync(string AccountCode, string Password, string MobileNumber, string SMSContent, string SmsId, string BrandName, string Param, object userState) {
            if ((this.VNetSendDirectSmsBrandNameWithParamOperationCompleted == null)) {
                this.VNetSendDirectSmsBrandNameWithParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVNetSendDirectSmsBrandNameWithParamOperationCompleted);
            }
            this.InvokeAsync("VNetSendDirectSmsBrandNameWithParam", new object[] {
                        AccountCode,
                        Password,
                        MobileNumber,
                        SMSContent,
                        SmsId,
                        BrandName,
                        Param}, this.VNetSendDirectSmsBrandNameWithParamOperationCompleted, userState);
        }
        
        private void OnVNetSendDirectSmsBrandNameWithParamOperationCompleted(object arg) {
            if ((this.VNetSendDirectSmsBrandNameWithParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VNetSendDirectSmsBrandNameWithParamCompleted(this, new VNetSendDirectSmsBrandNameWithParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckStatus(string AccountCode, string Password, string smsId, string ReservedParam) {
            object[] results = this.Invoke("CheckStatus", new object[] {
                        AccountCode,
                        Password,
                        smsId,
                        ReservedParam});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckStatusAsync(string AccountCode, string Password, string smsId, string ReservedParam) {
            this.CheckStatusAsync(AccountCode, Password, smsId, ReservedParam, null);
        }
        
        /// <remarks/>
        public void CheckStatusAsync(string AccountCode, string Password, string smsId, string ReservedParam, object userState) {
            if ((this.CheckStatusOperationCompleted == null)) {
                this.CheckStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckStatusOperationCompleted);
            }
            this.InvokeAsync("CheckStatus", new object[] {
                        AccountCode,
                        Password,
                        smsId,
                        ReservedParam}, this.CheckStatusOperationCompleted, userState);
        }
        
        private void OnCheckStatusOperationCompleted(object arg) {
            if ((this.CheckStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckStatusCompleted(this, new CheckStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36366")]
    public delegate void CheckServiceCompletedEventHandler(object sender, CheckServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36366")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36366")]
    public delegate void SendSmsCompletedEventHandler(object sender, SendSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36366")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36366")]
    public delegate void SendDirectSmsBrandNameCompletedEventHandler(object sender, SendDirectSmsBrandNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36366")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDirectSmsBrandNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDirectSmsBrandNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36366")]
    public delegate void VNetSendDirectSmsBrandNameWithParamCompletedEventHandler(object sender, VNetSendDirectSmsBrandNameWithParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36366")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VNetSendDirectSmsBrandNameWithParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VNetSendDirectSmsBrandNameWithParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36366")]
    public delegate void CheckStatusCompletedEventHandler(object sender, CheckStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36366")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591