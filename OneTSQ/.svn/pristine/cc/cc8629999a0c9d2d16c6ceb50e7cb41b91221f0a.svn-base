using System;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Data;
using OneTSQ.Model;
using OneTSQ.Bussiness.Template;
using OneTSQ.Database.Service;
using OneTSQ.Core.Model;

namespace OneTSQ.Bussiness.Sql
{
    public class HoiDongXetDuyetProcessBll : HoiDongXetDuyetTemplate
    {
        public override string ServiceId
        {
            get
            {
                return "SqlHoiDongXetDuyetProcessBll";
            }
        }
        public override HoiDongXetDuyetCls[] Reading(ActionSqlParamCls ActionSqlParam, HoiDongXetDuyetFilterCls OHoiDongXetDuyetFilter)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                if (OHoiDongXetDuyetFilter == null)
                {
                    OHoiDongXetDuyetFilter = new HoiDongXetDuyetFilterCls();
                }
                Collection<DbParam>
                    ColDbParams = new Collection<DbParam>();
                string Query = " select * from NCKH_HOIDONGXETDUYET where 1=1 ";
                if (!string.IsNullOrEmpty(OHoiDongXetDuyetFilter.LICHXETDUYET_ID))
                {
                    ColDbParams.Add(new DbParam("LICHXETDUYET_ID", OHoiDongXetDuyetFilter.LICHXETDUYET_ID));
                    Query += " and LICHXETDUYET_ID = " + ActionSqlParam.SpecialChar + "LICHXETDUYET_ID ";
                }
                if (!string.IsNullOrEmpty(OHoiDongXetDuyetFilter.NGUOIDUNG_ID))
                {
                    ColDbParams.Add(new DbParam("NGUOIDUNG_ID", OHoiDongXetDuyetFilter.NGUOIDUNG_ID));
                    Query += " and NGUOIDUNG_ID = " + ActionSqlParam.SpecialChar + "NGUOIDUNG_ID ";
                }            
                if (OHoiDongXetDuyetFilter.TrangThai != null)
                {
                    ColDbParams.Add(new DbParam("TRANGTHAI", OHoiDongXetDuyetFilter.TrangThai));
                    Query += " and TRANGTHAI = " + ActionSqlParam.SpecialChar + "TRANGTHAI ";
                }
                Query += " order by THOIGIANGUI";

                DataSet dsResult =
                        DBService.GetDataSet(ActionSqlParam.Trans, Query, ColDbParams.ToArray());
                HoiDongXetDuyetCls[] HoiDongXetDuyets = HoiDongXetDuyetParser.ParseFromDataTable(dsResult.Tables[0]);

                dsResult.Clear();
                dsResult.Dispose();
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return HoiDongXetDuyets;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override HoiDongXetDuyetCls[] PageReading(ActionSqlParamCls ActionSqlParam, HoiDongXetDuyetFilterCls OHoiDongXetDuyetFilter, ref long recordTotal)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                if (OHoiDongXetDuyetFilter == null)
                {
                    OHoiDongXetDuyetFilter = new HoiDongXetDuyetFilterCls();
                }
                Collection<DbParam>
                    ColDbParams = new Collection<DbParam>();
                string Query = "";
                string recordTotalQuery = "";

                Query = " select * from NCKH_HOIDONGXETDUYET Where 1=1 ";
                recordTotalQuery = " select count(1) from NCKH_HOIDONGXETDUYET Where 1=1 ";
                if (!string.IsNullOrEmpty(OHoiDongXetDuyetFilter.LICHXETDUYET_ID))
                {
                    ColDbParams.Add(new DbParam("LICHXETDUYET_ID", OHoiDongXetDuyetFilter.LICHXETDUYET_ID));
                    Query += " and LICHXETDUYET_ID = " + ActionSqlParam.SpecialChar + "LICHXETDUYET_ID ";
                    recordTotalQuery += " and LICHXETDUYET_ID = " + ActionSqlParam.SpecialChar + "LICHXETDUYET_ID ";
                }
                if (!string.IsNullOrEmpty(OHoiDongXetDuyetFilter.NGUOIDUNG_ID))
                {
                    ColDbParams.Add(new DbParam("NGUOIDUNG_ID", OHoiDongXetDuyetFilter.NGUOIDUNG_ID));
                    Query += " and NGUOIDUNG_ID = " + ActionSqlParam.SpecialChar + "NGUOIDUNG_ID ";
                    recordTotalQuery += " and NGUOIDUNG_ID = " + ActionSqlParam.SpecialChar + "NGUOIDUNG_ID ";
                }
                if (!string.IsNullOrEmpty(OHoiDongXetDuyetFilter.CHUCVU_ID))
                {
                    ColDbParams.Add(new DbParam("LICHXETDUYET_ID", OHoiDongXetDuyetFilter.CHUCVU_ID));
                    Query += " and CHUCVU_ID = " + ActionSqlParam.SpecialChar + "CHUCVU_ID ";
                    recordTotalQuery += " and CHUCVU_ID = " + ActionSqlParam.SpecialChar + "CHUCVU_ID ";
                }
                if (OHoiDongXetDuyetFilter.TrangThai != null)
                {
                    ColDbParams.Add(new DbParam("TRANGTHAI", OHoiDongXetDuyetFilter.TrangThai));
                    Query += " and TRANGTHAI = " + ActionSqlParam.SpecialChar + "TRANGTHAI ";
                    recordTotalQuery += " and TRANGTHAI = " + ActionSqlParam.SpecialChar + "TRANGTHAI ";
                }
                Query += " ORDER BY LICHXETDUYET_ID " +
                " OFFSET " + (OHoiDongXetDuyetFilter.PageIndex * OHoiDongXetDuyetFilter.PageSize) + " ROWS " +
                " FETCH NEXT " + OHoiDongXetDuyetFilter.PageSize + " ROWS ONLY ";

                DataSet dsResult =
                        DBService.GetDataSet(ActionSqlParam.Trans, Query, ColDbParams.ToArray());
                HoiDongXetDuyetCls[] HoiDongXetDuyets = HoiDongXetDuyetParser.ParseFromDataTable(dsResult.Tables[0]);
                recordTotal = long.Parse(DBService.GetDataSet(ActionSqlParam.Trans, recordTotalQuery, ColDbParams.ToArray()).Tables[0].Rows[0][0].ToString());

                dsResult.Clear();
                dsResult.Dispose();
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return HoiDongXetDuyets;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override void Add(ActionSqlParamCls ActionSqlParam, HoiDongXetDuyetCls OHoiDongXetDuyet)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                if (string.IsNullOrEmpty(OHoiDongXetDuyet.ID))
                {
                    OHoiDongXetDuyet.ID = System.Guid.NewGuid().ToString();
                }
                DBService.Insert(ActionSqlParam.Trans, "NCKH_HOIDONGXETDUYET",
                    new DbParam[]{
                    new DbParam("ID",OHoiDongXetDuyet.ID),
                    new DbParam("LICHXETDUYET_ID",OHoiDongXetDuyet.LICHXETDUYET_ID),
                    new DbParam("NGUOIDUNG_ID",OHoiDongXetDuyet.NGUOIDUNG_ID),
                    new DbParam("CHUCVU_ID",OHoiDongXetDuyet.CHUCVU_ID),                  
                });
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override void Save(ActionSqlParamCls ActionSqlParam, string ID, HoiDongXetDuyetCls OHoiDongXetDuyet)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                DBService.Update(ActionSqlParam.Trans, "NCKH_HOIDONGXETDUYET", "ID", ID,
                    new DbParam[]{
                    new DbParam("LICHXETDUYET_ID",OHoiDongXetDuyet.LICHXETDUYET_ID),
                    new DbParam("NGUOIDUNG_ID",OHoiDongXetDuyet.NGUOIDUNG_ID),
                    new DbParam("CHUCVU_ID",OHoiDongXetDuyet.CHUCVU_ID),
                    });
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override void Delete(ActionSqlParamCls ActionSqlParam, string ID)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;
            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                string DelQuery = " Delete from NCKH_HOIDONGXETDUYET where ID=" + ActionSqlParam.SpecialChar + "ID";
                DBService.ExecuteNonQuery(ActionSqlParam.Trans, DelQuery,
                    new DbParam[]
                    {
                    new DbParam("ID", ID)
                    });
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override HoiDongXetDuyetCls CreateModel(ActionSqlParamCls ActionSqlParam, string ID)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                DataSet dsResult =
                        DBService.GetDataSet(ActionSqlParam.Trans, "select * from NCKH_HOIDONGXETDUYET where ID =" + ActionSqlParam.SpecialChar + "ID", new DbParam[]{
                    new DbParam("ID",ID)
                    });
                HoiDongXetDuyetCls OHoiDongXetDuyet = null;
                if (dsResult.Tables[0].Rows.Count > 0)
                {
                    OHoiDongXetDuyet = HoiDongXetDuyetParser.ParseFromDataRow(dsResult.Tables[0].Rows[0]);
                }
                dsResult.Clear();
                dsResult.Dispose();

                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return OHoiDongXetDuyet;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override string Duplicate(ActionSqlParamCls ActionSqlParam, string ID)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            string NewID = System.Guid.NewGuid().ToString();
            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                HoiDongXetDuyetCls OHoiDongXetDuyet = CreateModel(ActionSqlParam, ID);
                OHoiDongXetDuyet.ID = NewID;
                Add(ActionSqlParam, OHoiDongXetDuyet);

                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return NewID;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override long Count(ActionSqlParamCls ActionSqlParam, HoiDongXetDuyetFilterCls OHoiDongXetDuyetFilter)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                if (OHoiDongXetDuyetFilter == null)
                {
                    OHoiDongXetDuyetFilter = new HoiDongXetDuyetFilterCls();
                }
                Collection<DbParam>
                    ColDbParams = new Collection<DbParam>();
                string Query = " select count(1) from NCKH_HOIDONGXETDUYET";
                if (!string.IsNullOrEmpty(OHoiDongXetDuyetFilter.LICHXETDUYET_ID))
                {
                    ColDbParams.Add(new DbParam("LICHXETDUYET_ID", OHoiDongXetDuyetFilter.LICHXETDUYET_ID));
                    Query += " and LICHXETDUYET_ID = " + ActionSqlParam.SpecialChar + "LICHXETDUYET_ID ";
                }
                if (!string.IsNullOrEmpty(OHoiDongXetDuyetFilter.NGUOIDUNG_ID))
                {
                    ColDbParams.Add(new DbParam("NGUOIDUNG_ID", OHoiDongXetDuyetFilter.NGUOIDUNG_ID));
                    Query += " and NGUOIDUNG_ID = " + ActionSqlParam.SpecialChar + "NGUOIDUNG_ID";
                }
                if (!string.IsNullOrEmpty(OHoiDongXetDuyetFilter.CHUCVU_ID))
                {
                    ColDbParams.Add(new DbParam("CHUCVU_ID", OHoiDongXetDuyetFilter.CHUCVU_ID));
                    Query += " and CHUCVU_ID = " + ActionSqlParam.SpecialChar + "CHUCVU_ID";
                }                                     
                long result = long.Parse(DBService.GetDataSet(ActionSqlParam.Trans, Query, ColDbParams.ToArray()).Tables[0].Rows[0][0].ToString());
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return result;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
    }
}
