using System;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Data;
using OneTSQ.Model;
using OneTSQ.Bussiness.Template;
using OneTSQ.Database.Service;
using OneTSQ.Core.Model;

namespace OneTSQ.Bussiness.Sql
{
    public class PhieuBaoCaoSuCoYKhoaProcessBll : PhieuBaoCaoSuCoYKhoaTemplate
    {
        public override string ServiceId
        {
            get
            {
                return "SqlPhieuBaoCaoSuCoYKhoaProcessBll";
            }
        }
        public override PhieuBaoCaoSuCoYKhoaCls[] Reading(ActionSqlParamCls ActionSqlParam, PhieuBaoCaoSuCoYKhoaFilterCls OPhieuBaoCaoSuCoYKhoaFilter)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                if (OPhieuBaoCaoSuCoYKhoaFilter == null)
                {
                    OPhieuBaoCaoSuCoYKhoaFilter = new PhieuBaoCaoSuCoYKhoaFilterCls();
                }
                Collection<DbParam>
                    ColDbParams = new Collection<DbParam>();
                string Query = " select * from PHIEUBAOCAOSUCOYKHOA where 1=1 ";
                if (!string.IsNullOrEmpty(OPhieuBaoCaoSuCoYKhoaFilter.HinhThuc_ID))
                {
                    ColDbParams.Add(new DbParam("HINHTHUC_ID", OPhieuBaoCaoSuCoYKhoaFilter.HinhThuc_ID));
                    Query += " and HINHTHUC_ID = " + ActionSqlParam.SpecialChar + "HINHTHUC_ID ";
                }
                if (!string.IsNullOrEmpty(OPhieuBaoCaoSuCoYKhoaFilter.NguoiLap_ID))
                {
                    ColDbParams.Add(new DbParam("NGUOILAP_ID", OPhieuBaoCaoSuCoYKhoaFilter.NguoiLap_ID));
                    Query += " and NGUOILAP_ID = " + ActionSqlParam.SpecialChar + "NGUOILAP_ID ";
                }
                if (OPhieuBaoCaoSuCoYKhoaFilter.DoiTuongSuCo != null)
                {
                    ColDbParams.Add(new DbParam("DOITUONGSUCO", OPhieuBaoCaoSuCoYKhoaFilter.DoiTuongSuCo));
                    Query += " and DOITUONGSUCO = " + ActionSqlParam.SpecialChar + "DOITUONGSUCO ";
                }
                if (OPhieuBaoCaoSuCoYKhoaFilter.TrangThai != null)
                {
                    ColDbParams.Add(new DbParam("TRANGTHAI", OPhieuBaoCaoSuCoYKhoaFilter.TrangThai));
                    Query += " and TRANGTHAI = " + ActionSqlParam.SpecialChar + "TRANGTHAI ";
                }
                Query += " order by NGAYDANGKY";

                DataSet dsResult =
                        DBService.GetDataSet(ActionSqlParam.Trans, Query, ColDbParams.ToArray());
                PhieuBaoCaoSuCoYKhoaCls[] PhieuBaoCaoSuCoYKhoas = PhieuBaoCaoSuCoYKhoaParser.ParseFromDataTable(dsResult.Tables[0]);

                dsResult.Clear();
                dsResult.Dispose();
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return PhieuBaoCaoSuCoYKhoas;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override PhieuBaoCaoSuCoYKhoaCls[] PageReading(ActionSqlParamCls ActionSqlParam, PhieuBaoCaoSuCoYKhoaFilterCls OPhieuBaoCaoSuCoYKhoaFilter, ref long recordTotal)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                if (OPhieuBaoCaoSuCoYKhoaFilter == null)
                {
                    OPhieuBaoCaoSuCoYKhoaFilter = new PhieuBaoCaoSuCoYKhoaFilterCls();
                }
                Collection<DbParam>
                    ColDbParams = new Collection<DbParam>();
                string Query = "";
                string recordTotalQuery = "";

                Query = " select * from PHIEUBAOCAOSUCOYKHOA Where 1=1 ";
                recordTotalQuery = " select count(1) from PHIEUBAOCAOSUCOYKHOA Where 1=1 ";
                if (!string.IsNullOrEmpty(OPhieuBaoCaoSuCoYKhoaFilter.HinhThuc_ID))
                {
                    ColDbParams.Add(new DbParam("HINHTHUC_ID", OPhieuBaoCaoSuCoYKhoaFilter.HinhThuc_ID));
                    Query += " and HINHTHUC_ID = " + ActionSqlParam.SpecialChar + "HINHTHUC_ID ";
                    recordTotalQuery += " and HINHTHUC_ID = " + ActionSqlParam.SpecialChar + "HINHTHUC_ID ";
                }
                if (!string.IsNullOrEmpty(OPhieuBaoCaoSuCoYKhoaFilter.NguoiLap_ID))
                {
                    ColDbParams.Add(new DbParam("NGUOILAP_ID", OPhieuBaoCaoSuCoYKhoaFilter.NguoiLap_ID));
                    Query += " and NGUOILAP_ID = " + ActionSqlParam.SpecialChar + "NGUOILAP_ID ";
                    recordTotalQuery += " and NGUOILAP_ID = " + ActionSqlParam.SpecialChar + "NGUOILAP_ID ";
                }              
                if (!string.IsNullOrEmpty(OPhieuBaoCaoSuCoYKhoaFilter.Keyword))
                {
                    ColDbParams.Add(new DbParam("Keyword", "%" + OPhieuBaoCaoSuCoYKhoaFilter.Keyword.ToUpper() + "%"));
                    ColDbParams.Add(new DbParam("Keyword1", "%" + OPhieuBaoCaoSuCoYKhoaFilter.Keyword.ToUpper() + "%"));
                    Query += " and (upper(MASOPHIEU) like " + ActionSqlParam.SpecialChar + "Keyword OR upper(HOTEN) like " + ActionSqlParam.SpecialChar + "Keyword1) ";
                    recordTotalQuery += " and (upper(MASOPHIEU) like " + ActionSqlParam.SpecialChar + "Keyword OR upper(HOTEN) like " + ActionSqlParam.SpecialChar + "Keyword1) ";
                }
                if (OPhieuBaoCaoSuCoYKhoaFilter.DoiTuongSuCo != null)
                {
                    ColDbParams.Add(new DbParam("DOITUONGSUCO", OPhieuBaoCaoSuCoYKhoaFilter.DoiTuongSuCo));
                    Query += " and DOITUONGSUCO = " + ActionSqlParam.SpecialChar + "DOITUONGSUCO ";
                }
                if (OPhieuBaoCaoSuCoYKhoaFilter.TrangThai != null)
                {
                    ColDbParams.Add(new DbParam("TRANGTHAI", OPhieuBaoCaoSuCoYKhoaFilter.TrangThai));
                    Query += " and TRANGTHAI = " + ActionSqlParam.SpecialChar + "TRANGTHAI ";
                    recordTotalQuery += " and TRANGTHAI = " + ActionSqlParam.SpecialChar + "TRANGTHAI ";
                }
                Query += " ORDER BY NGAYBAOCAO " +
                " OFFSET " + (OPhieuBaoCaoSuCoYKhoaFilter.PageIndex * OPhieuBaoCaoSuCoYKhoaFilter.PageSize) + " ROWS " +
                " FETCH NEXT " + OPhieuBaoCaoSuCoYKhoaFilter.PageSize + " ROWS ONLY ";

                DataSet dsResult =
                        DBService.GetDataSet(ActionSqlParam.Trans, Query, ColDbParams.ToArray());
                PhieuBaoCaoSuCoYKhoaCls[] PhieuBaoCaoSuCoYKhoas = PhieuBaoCaoSuCoYKhoaParser.ParseFromDataTable(dsResult.Tables[0]);
                recordTotal = long.Parse(DBService.GetDataSet(ActionSqlParam.Trans, recordTotalQuery, ColDbParams.ToArray()).Tables[0].Rows[0][0].ToString());

                dsResult.Clear();
                dsResult.Dispose();
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return PhieuBaoCaoSuCoYKhoas;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override void Add(ActionSqlParamCls ActionSqlParam, PhieuBaoCaoSuCoYKhoaCls OPhieuBaoCaoSuCoYKhoa)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                if (string.IsNullOrEmpty(OPhieuBaoCaoSuCoYKhoa.ID))
                {
                    OPhieuBaoCaoSuCoYKhoa.ID = System.Guid.NewGuid().ToString();
                }
                DBService.Insert(ActionSqlParam.Trans, "PHIEUBAOCAOSUCOYKHOA",
                    new DbParam[]{
                    new DbParam("ID",OPhieuBaoCaoSuCoYKhoa.ID),
                    new DbParam("MASOPHIEU",OPhieuBaoCaoSuCoYKhoa.MASOPHIEU),
                    new DbParam("HINHTHUC_ID",OPhieuBaoCaoSuCoYKhoa.HINHTHUC_ID),
                    new DbParam("NGUOILAP_ID",OPhieuBaoCaoSuCoYKhoa.NGUOILAP_ID),
                    new DbParam("NGAYBAOCAO",OPhieuBaoCaoSuCoYKhoa.NGAYBAOCAO),
                    new DbParam("DOITUONGSUCO",OPhieuBaoCaoSuCoYKhoa.DOITUONGSUCO),
                    new DbParam("MABN",OPhieuBaoCaoSuCoYKhoa.MABN),
                    new DbParam("HOTEN",OPhieuBaoCaoSuCoYKhoa.HOTEN),
                    new DbParam("NGAYSINH",OPhieuBaoCaoSuCoYKhoa.NGAYSINH),
                    new DbParam("GIOITINH",OPhieuBaoCaoSuCoYKhoa.GIOITINH),
                    new DbParam("KHOAPHONG_ID",OPhieuBaoCaoSuCoYKhoa.KHOAPHONG_ID),
                    new DbParam("NOIXAYRA",OPhieuBaoCaoSuCoYKhoa.NOIXAYRA),
                    new DbParam("THOIGIANXAYRA",OPhieuBaoCaoSuCoYKhoa.THOIGIANXAYRA),
                    new DbParam("VITRIXAYRA",OPhieuBaoCaoSuCoYKhoa.VITRIXAYRA),
                    new DbParam("VITRICUTHE",OPhieuBaoCaoSuCoYKhoa.VITRICUTHE),
                    new DbParam("MOTASUCO",OPhieuBaoCaoSuCoYKhoa.MOTASUCO),
                    new DbParam("DEXUATGIAIPHAP",OPhieuBaoCaoSuCoYKhoa.DEXUATGIAIPHAP),
                    new DbParam("DIEUTRIXULYDUOCTHUCHIEN",OPhieuBaoCaoSuCoYKhoa.DIEUTRIXULYDUOCTHUCHIEN),
                    new DbParam("THONGBAOCHOBACSI",OPhieuBaoCaoSuCoYKhoa.THONGBAOCHOBACSI),
                    new DbParam("THONGBAOCHONGUOINHA",OPhieuBaoCaoSuCoYKhoa.THONGBAOCHONGUOINHA),
                    new DbParam("GHINHANVAOHOSO",OPhieuBaoCaoSuCoYKhoa.GHINHANVAOHOSO),
                    new DbParam("THONGBAOCHONGUOIBENH",OPhieuBaoCaoSuCoYKhoa.THONGBAOCHONGUOIBENH),
                    new DbParam("PHANLOAISUCO",OPhieuBaoCaoSuCoYKhoa.PHANLOAISUCO),
                    new DbParam("MUCDOANHHUONG",OPhieuBaoCaoSuCoYKhoa.MUCDOANHHUONG),
                    new DbParam("HOTENNGUOIBAOCAO",OPhieuBaoCaoSuCoYKhoa.HOTENNGUOIBAOCAO),
                    new DbParam("SODIENTHOAI",OPhieuBaoCaoSuCoYKhoa.SODIENTHOAI),
                    new DbParam("EMAIL",OPhieuBaoCaoSuCoYKhoa.EMAIL),
                    new DbParam("DOITUONGBAOCAO",OPhieuBaoCaoSuCoYKhoa.DOITUONGBAOCAO),
                    new DbParam("NGUOICHUNGKIEN1",OPhieuBaoCaoSuCoYKhoa.NGUOICHUNGKIEN1),
                    new DbParam("NGUOICHUNGKIEN2",OPhieuBaoCaoSuCoYKhoa.NGUOICHUNGKIEN2),
                    new DbParam("GHICHUDIEUDUONG",OPhieuBaoCaoSuCoYKhoa.GHICHUDIEUDUONG),
                    new DbParam("GHICHUBACSI",OPhieuBaoCaoSuCoYKhoa.GHICHUBACSI),
                    new DbParam("GHICHUKHAC",OPhieuBaoCaoSuCoYKhoa.GHICHUKHAC),
                    new DbParam("TRANGTHAI",OPhieuBaoCaoSuCoYKhoa.TRANGTHAI)
                });
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override void Save(ActionSqlParamCls ActionSqlParam, string ID, PhieuBaoCaoSuCoYKhoaCls OPhieuBaoCaoSuCoYKhoa)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                DBService.Update(ActionSqlParam.Trans, "PHIEUBAOCAOSUCOYKHOA", "ID", ID,
                    new DbParam[]{
                    new DbParam("MASOPHIEU",OPhieuBaoCaoSuCoYKhoa.MASOPHIEU),
                    new DbParam("HINHTHUC_ID",OPhieuBaoCaoSuCoYKhoa.HINHTHUC_ID),
                    new DbParam("NGUOILAP_ID",OPhieuBaoCaoSuCoYKhoa.NGUOILAP_ID),
                    new DbParam("NGAYBAOCAO",OPhieuBaoCaoSuCoYKhoa.NGAYBAOCAO),
                    new DbParam("DOITUONGSUCO",OPhieuBaoCaoSuCoYKhoa.DOITUONGSUCO),
                    new DbParam("MABN",OPhieuBaoCaoSuCoYKhoa.MABN),
                    new DbParam("HOTEN",OPhieuBaoCaoSuCoYKhoa.HOTEN),
                    new DbParam("NGAYSINH",OPhieuBaoCaoSuCoYKhoa.NGAYSINH),
                    new DbParam("GIOITINH",OPhieuBaoCaoSuCoYKhoa.GIOITINH),
                    new DbParam("KHOAPHONG_ID",OPhieuBaoCaoSuCoYKhoa.KHOAPHONG_ID),
                    new DbParam("NOIXAYRA",OPhieuBaoCaoSuCoYKhoa.NOIXAYRA),
                    new DbParam("THOIGIANXAYRA",OPhieuBaoCaoSuCoYKhoa.THOIGIANXAYRA),
                    new DbParam("VITRIXAYRA",OPhieuBaoCaoSuCoYKhoa.VITRIXAYRA),
                    new DbParam("VITRICUTHE",OPhieuBaoCaoSuCoYKhoa.VITRICUTHE),
                    new DbParam("MOTASUCO",OPhieuBaoCaoSuCoYKhoa.MOTASUCO),
                    new DbParam("DEXUATGIAIPHAP",OPhieuBaoCaoSuCoYKhoa.DEXUATGIAIPHAP),
                    new DbParam("DIEUTRIXULYDUOCTHUCHIEN",OPhieuBaoCaoSuCoYKhoa.DIEUTRIXULYDUOCTHUCHIEN),
                    new DbParam("THONGBAOCHOBACSI",OPhieuBaoCaoSuCoYKhoa.THONGBAOCHOBACSI),
                    new DbParam("THONGBAOCHONGUOINHA",OPhieuBaoCaoSuCoYKhoa.THONGBAOCHONGUOINHA),
                    new DbParam("GHINHANVAOHOSO",OPhieuBaoCaoSuCoYKhoa.GHINHANVAOHOSO),
                    new DbParam("THONGBAOCHONGUOIBENH",OPhieuBaoCaoSuCoYKhoa.THONGBAOCHONGUOIBENH),
                    new DbParam("PHANLOAISUCO",OPhieuBaoCaoSuCoYKhoa.PHANLOAISUCO),
                    new DbParam("MUCDOANHHUONG",OPhieuBaoCaoSuCoYKhoa.MUCDOANHHUONG),
                    new DbParam("HOTENNGUOIBAOCAO",OPhieuBaoCaoSuCoYKhoa.HOTENNGUOIBAOCAO),
                    new DbParam("SODIENTHOAI",OPhieuBaoCaoSuCoYKhoa.SODIENTHOAI),
                    new DbParam("EMAIL",OPhieuBaoCaoSuCoYKhoa.EMAIL),
                    new DbParam("DOITUONGBAOCAO",OPhieuBaoCaoSuCoYKhoa.DOITUONGBAOCAO),
                    new DbParam("NGUOICHUNGKIEN1",OPhieuBaoCaoSuCoYKhoa.NGUOICHUNGKIEN1),
                    new DbParam("NGUOICHUNGKIEN2",OPhieuBaoCaoSuCoYKhoa.NGUOICHUNGKIEN2),
                    new DbParam("GHICHUDIEUDUONG",OPhieuBaoCaoSuCoYKhoa.GHICHUDIEUDUONG),
                    new DbParam("GHICHUBACSI",OPhieuBaoCaoSuCoYKhoa.GHICHUBACSI),
                    new DbParam("GHICHUKHAC",OPhieuBaoCaoSuCoYKhoa.GHICHUKHAC),
                    new DbParam("TRANGTHAI",OPhieuBaoCaoSuCoYKhoa.TRANGTHAI)
                    });
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override void Delete(ActionSqlParamCls ActionSqlParam, string ID)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;
            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                string DelQuery = " Delete from PHIEUBAOCAOSUCOYKHOA where ID=" + ActionSqlParam.SpecialChar + "ID";
                DBService.ExecuteNonQuery(ActionSqlParam.Trans, DelQuery,
                    new DbParam[]
                    {
                    new DbParam("ID", ID)
                    });
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override PhieuBaoCaoSuCoYKhoaCls CreateModel(ActionSqlParamCls ActionSqlParam, string ID)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                DataSet dsResult =
                        DBService.GetDataSet(ActionSqlParam.Trans, "select * from PHIEUBAOCAOSUCOYKHOA where (ID =" + ActionSqlParam.SpecialChar + "ID or MASOPHIEU =" + ActionSqlParam.SpecialChar + "ID)", new DbParam[]{
                    new DbParam("ID",ID)
                    });
                PhieuBaoCaoSuCoYKhoaCls OPhieuBaoCaoSuCoYKhoa = null;
                if (dsResult.Tables[0].Rows.Count > 0)
                {
                    OPhieuBaoCaoSuCoYKhoa = PhieuBaoCaoSuCoYKhoaParser.ParseFromDataRow(dsResult.Tables[0].Rows[0]);
                }
                dsResult.Clear();
                dsResult.Dispose();

                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return OPhieuBaoCaoSuCoYKhoa;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override string Duplicate(ActionSqlParamCls ActionSqlParam, string ID)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            string NewID = System.Guid.NewGuid().ToString();
            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                PhieuBaoCaoSuCoYKhoaCls OPhieuBaoCaoSuCoYKhoa = CreateModel(ActionSqlParam, ID);
                OPhieuBaoCaoSuCoYKhoa.ID = NewID;
                Add(ActionSqlParam, OPhieuBaoCaoSuCoYKhoa);

                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return NewID;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
        public override long Count(ActionSqlParamCls ActionSqlParam, PhieuBaoCaoSuCoYKhoaFilterCls OPhieuBaoCaoSuCoYKhoaFilter)
        {
            IDatabaseService DBService = WebDatabaseService.CreateDBService(ActionSqlParam);
            bool HasTrans = ActionSqlParam.Trans != null;
            bool HasCommit = false;

            if (!HasTrans)
            {
                ActionSqlParam.Trans = DBService.BeginTransaction();
            }

            try
            {
                if (OPhieuBaoCaoSuCoYKhoaFilter == null)
                {
                    OPhieuBaoCaoSuCoYKhoaFilter = new PhieuBaoCaoSuCoYKhoaFilterCls();
                }
                Collection<DbParam>
                    ColDbParams = new Collection<DbParam>();
                string Query = " select count(1) from PHIEUBAOCAOSUCOYKHOA";
                if (!string.IsNullOrEmpty(OPhieuBaoCaoSuCoYKhoaFilter.HinhThuc_ID))
                {
                    ColDbParams.Add(new DbParam("HINHTHUC_ID", OPhieuBaoCaoSuCoYKhoaFilter.HinhThuc_ID));
                    Query += " and HINHTHUC_ID = " + ActionSqlParam.SpecialChar + "HINHTHUC_ID ";
                }
                if (!string.IsNullOrEmpty(OPhieuBaoCaoSuCoYKhoaFilter.NguoiLap_ID))
                {
                    ColDbParams.Add(new DbParam("NGUOILAP_ID", OPhieuBaoCaoSuCoYKhoaFilter.NguoiLap_ID));
                    Query += " and NGUOILAP_ID = " + ActionSqlParam.SpecialChar + "NGUOILAP_ID";
                }
                if (OPhieuBaoCaoSuCoYKhoaFilter.DoiTuongSuCo != null)
                {
                    ColDbParams.Add(new DbParam("DOITUONGSUCO", OPhieuBaoCaoSuCoYKhoaFilter.DoiTuongSuCo));
                    Query += " and DOITUONGSUCO = " + ActionSqlParam.SpecialChar + "DOITUONGSUCO ";
                }
                if (OPhieuBaoCaoSuCoYKhoaFilter.TrangThai != null)
                {
                    ColDbParams.Add(new DbParam("TRANGTHAI", OPhieuBaoCaoSuCoYKhoaFilter.TrangThai));
                    Query += " and TRANGTHAI = " + ActionSqlParam.SpecialChar + "TRANGTHAI ";
                }
                if (OPhieuBaoCaoSuCoYKhoaFilter.TuNgay != null)
                {
                    ColDbParams.Add(new DbParam("TUNGAY", OPhieuBaoCaoSuCoYKhoaFilter.TuNgay));
                    Query += " and NGAYBAOCAO >= " + ActionSqlParam.SpecialChar + "TUNGAY ";
                }
                if (OPhieuBaoCaoSuCoYKhoaFilter.TuNgay != null)
                {
                    ColDbParams.Add(new DbParam("DENNGAY", OPhieuBaoCaoSuCoYKhoaFilter.TuNgay));
                    Query += " and NGAYBAOCAO < " + ActionSqlParam.SpecialChar + "DENNGAY ";
                }              
                long result = long.Parse(DBService.GetDataSet(ActionSqlParam.Trans, Query, ColDbParams.ToArray()).Tables[0].Rows[0][0].ToString());
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Commit();
                    ActionSqlParam.Trans = null;
                    HasCommit = true;
                }
                return result;
            }
            catch (Exception ex)
            {
                if (!HasTrans && !HasCommit)
                {
                    ActionSqlParam.Trans.Rollback();
                    ActionSqlParam.Trans = null;
                }
                throw (ex);
            }
        }
    }
}
